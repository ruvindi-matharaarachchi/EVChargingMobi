// Generated by view binder compiler. Do not edit!
package com.evcharge.mobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.evcharge.mobile.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityReservationBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialButton btnCancel;

  @NonNull
  public final MaterialButton btnConfirm;

  @NonNull
  public final MaterialCardView cardSummary;

  @NonNull
  public final TextInputEditText etEndTime;

  @NonNull
  public final TextInputEditText etStartTime;

  @NonNull
  public final AutoCompleteTextView etStation;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextInputLayout tilEndTime;

  @NonNull
  public final TextInputLayout tilStartTime;

  @NonNull
  public final TextInputLayout tilStation;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final TextView tvSummaryStation;

  @NonNull
  public final TextView tvSummaryTime;

  private ActivityReservationBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialButton btnCancel, @NonNull MaterialButton btnConfirm,
      @NonNull MaterialCardView cardSummary, @NonNull TextInputEditText etEndTime,
      @NonNull TextInputEditText etStartTime, @NonNull AutoCompleteTextView etStation,
      @NonNull ProgressBar progressBar, @NonNull TextInputLayout tilEndTime,
      @NonNull TextInputLayout tilStartTime, @NonNull TextInputLayout tilStation,
      @NonNull MaterialToolbar toolbar, @NonNull TextView tvSummaryStation,
      @NonNull TextView tvSummaryTime) {
    this.rootView = rootView;
    this.btnCancel = btnCancel;
    this.btnConfirm = btnConfirm;
    this.cardSummary = cardSummary;
    this.etEndTime = etEndTime;
    this.etStartTime = etStartTime;
    this.etStation = etStation;
    this.progressBar = progressBar;
    this.tilEndTime = tilEndTime;
    this.tilStartTime = tilStartTime;
    this.tilStation = tilStation;
    this.toolbar = toolbar;
    this.tvSummaryStation = tvSummaryStation;
    this.tvSummaryTime = tvSummaryTime;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityReservationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityReservationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_reservation, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityReservationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_cancel;
      MaterialButton btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btn_confirm;
      MaterialButton btnConfirm = ViewBindings.findChildViewById(rootView, id);
      if (btnConfirm == null) {
        break missingId;
      }

      id = R.id.card_summary;
      MaterialCardView cardSummary = ViewBindings.findChildViewById(rootView, id);
      if (cardSummary == null) {
        break missingId;
      }

      id = R.id.et_end_time;
      TextInputEditText etEndTime = ViewBindings.findChildViewById(rootView, id);
      if (etEndTime == null) {
        break missingId;
      }

      id = R.id.et_start_time;
      TextInputEditText etStartTime = ViewBindings.findChildViewById(rootView, id);
      if (etStartTime == null) {
        break missingId;
      }

      id = R.id.et_station;
      AutoCompleteTextView etStation = ViewBindings.findChildViewById(rootView, id);
      if (etStation == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.til_end_time;
      TextInputLayout tilEndTime = ViewBindings.findChildViewById(rootView, id);
      if (tilEndTime == null) {
        break missingId;
      }

      id = R.id.til_start_time;
      TextInputLayout tilStartTime = ViewBindings.findChildViewById(rootView, id);
      if (tilStartTime == null) {
        break missingId;
      }

      id = R.id.til_station;
      TextInputLayout tilStation = ViewBindings.findChildViewById(rootView, id);
      if (tilStation == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tv_summary_station;
      TextView tvSummaryStation = ViewBindings.findChildViewById(rootView, id);
      if (tvSummaryStation == null) {
        break missingId;
      }

      id = R.id.tv_summary_time;
      TextView tvSummaryTime = ViewBindings.findChildViewById(rootView, id);
      if (tvSummaryTime == null) {
        break missingId;
      }

      return new ActivityReservationBinding((CoordinatorLayout) rootView, btnCancel, btnConfirm,
          cardSummary, etEndTime, etStartTime, etStation, progressBar, tilEndTime, tilStartTime,
          tilStation, toolbar, tvSummaryStation, tvSummaryTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
